{
  "id": "angular",
  "list": {
    "1st": [
      {
        "question": "Angular is a ____",
        "type": "radio",
        "options": [
          {
            "id": 1,
            "label": "Java framework"
          },
          {
            "id": 2,
            "label": "JavaScript framework"
          },
          {
            "id": 3,
            "label": "HTML framework"
          },
          {
            "id": 4,
            "label": "TypeScript framework"
          }
        ],
        "answer": [
          2
        ]
      },
      {
        "question": "Which of the following is not a hook application life cycle?",
        "type": "radio",
        "options": [
          {
            "id": 1,
            "label": "ngOnChanges"
          },
          {
            "id": 2,
            "label": "ngViewStart"
          },
          {
            "id": 3,
            "label": "ngOnInit"
          },
          {
            "id": 4,
            "label": "None of the above"
          }
        ],
        "answer": [
          2
        ]
      },
      {
        "question": "Which angular decorator allows us to define the pipe name that is globally available for use in any template in the across application?",
        "type": "radio",
        "options": [
          {
            "id": 1,
            "label": "pipeName"
          },
          {
            "id": 2,
            "label": "pipeDeco"
          },
          {
            "id": 3,
            "label": "Pipe"
          },
          {
            "id": 4,
            "label": "None of the above"
          }
        ],
        "answer": [
          3
        ]
      },
      {
        "question": "Which of the following will map the name of an input parameter `userData` to a field named `users`?",
        "type": "radio",
        "options": [
          {
            "id": 1,
            "label": "@Input('userData') users"
          },
          {
            "id": 2,
            "label": "@Input() userData: users"
          },
          {
            "id": 3,
            "label": "@Input() users: userData"
          },
          {
            "id": 4,
            "label": "@Input('users') userData"
          }
        ],
        "answer": [
          1
        ]
      },
      {
        "question": "What is Angular?",
        "type": "radio",
        "options": [
          {
            "id": 1,
            "label": "A programming language"
          },
          {
            "id": 2,
            "label": "A JavaScript library"
          },
          {
            "id": 3,
            "label": "A framework for building web applications"
          },
          {
            "id": 4,
            "label": "A database management system"
          }
        ],
        "answer": [
          3
        ]
      }
    ],
    "2nd": [
      {
        "question": " What is the purpose of Angular CLI?",
        "type": "radio",
        "options": [
          {
            "id": 1,
            "label": "To create and manage Angular projects"
          },
          {
            "id": 2,
            "label": "To write JavaScript code"
          },
          {
            "id": 3,
            "label": "To design user interfaces"
          },
          {
            "id": 4,
            "label": "To connect to databases"
          }
        ],
        "answer": [
          1
        ]
      },
      {
        "question": "In Angular, what is the purpose of the @NgModule decorator?",
        "type": "radio",
        "options": [
          {
            "id": 1,
            "label": "To define a component"
          },
          {
            "id": 2,
            "label": "To define a service"
          },
          {
            "id": 3,
            "label": "To define a module"
          },
          {
            "id": 4,
            "label": "To define a directive"
          }
        ],
        "answer": [
          3
        ]
      },
      {
        "question": "What is the purpose of the Angular Interceptor?",
        "type": "checkbox",
        "options": [
          {
            "id": 1,
            "label": "To intercept HTTP requests and responses"
          },
          {
            "id": 2,
            "label": "To intercept user input"
          },
          {
            "id": 3,
            "label": "To intercept routing events"
          },
          {
            "id": 4,
            "label": "To intercept Angular CLI commands"
          }
        ],
        "answer": [
          1
        ]
      },
      {
        "question": "How do you communicate between components in Angular?",
        "type": "checkbox",
        "options": [
          {
            "id": 1,
            "label": "Using @Input and @Output decorators"
          },
          {
            "id": 2,
            "label": "Using two way binding"
          },
          {
            "id": 3,
            "label": "By directly accessing component properties"
          },
          {
            "id": 4,
            "label": "Using JavaScript's window object"
          }
        ],
        "answer": [
          1,
          2
        ]
      },
      {
        "question": "What is Angular CLI's ng serve command used for?",
        "type": "radio",
        "options": [
          {
            "id": 1,
            "label": "Creating a new Angular project"
          },
          {
            "id": 2,
            "label": "Compiling TypeScript code"
          },
          {
            "id": 3,
            "label": "Running a development server for the Angular application"
          },
          {
            "id": 4,
            "label": "Generating Angular components"
          }
        ],
        "answer": [
          3
        ]
      }
    ],
    "3rd": [
      {
        "question": "What is an Angular resolver used for?",
        "type": "radio",
        "options": [
          {
            "id": 1,
            "label": "To resolve routing conflicts"
          },
          {
            "id": 2,
            "label": "To resolve dependencies in Angular modules"
          },
          {
            "id": 3,
            "label": "To prefetch data before a route is activated"
          },
          {
            "id": 4,
            "label": "To resolve authentication issues"
          }
        ],
        "answer": [
          3
        ]
      },
      {
        "question": "What is an Angular directive, and how does it differ from a component?",
        "type": "radio",
        "options": [
          {
            "id": 1,
            "label": "A directive is used for rendering HTML templates, while a component represents a page."
          },
          {
            "id": 2,
            "label": "A directive is used for extending HTML with custom behavior, while a component is a self-contained UI element."
          },
          {
            "id": 3,
            "label": "A directive is used for defining module dependencies, while a component is used for routing."
          },
          {
            "id": 4,
            "label": "A directive is used for managing API requests, while a component is used for UI design."
          }
        ],
        "answer": [
          2
        ]
      },
      {
        "question": "Explain the difference between ngOnInit and constructor in an Angular component.",
        "type": "radio",
        "options": [
          {
            "id": 1,
            "label": "ngOnInit is used for component initialization, while the constructor is used for dependency injection."
          },
          {
            "id": 2,
            "label": "ngOnInit is used for dependency injection, while the constructor is used for component initialization."
          },
          {
            "id": 3,
            "label": "They are interchangeable and can be used for the same purpose."
          },
          {
            "id": 4,
            "label": "ngOnInit is used for defining routes, while the constructor is used for event handling."
          }
        ],
        "answer": [
          1
        ]
      },
      {
        "question": "What is Angular's AOT (Ahead-of-Time) compilation, and why is it important?",
        "type": "radio",
        "options": [
          {
            "id": 1,
            "label": "AOT compiles templates and components before runtime, improving application performance and security."
          },
          {
            "id": 2,
            "label": "AOT is a feature for routing optimization in Angular."
          },
          {
            "id": 3,
            "label": "AOT is used for asynchronous data loading in Angular applications."
          },
          {
            "id": 4,
            "label": "AOT stands for Angular's Offline Testing, which verifies application functionality without an internet connection."
          }
        ],
        "answer": [
          1
        ]
      },
      {
        "question": "How can you implement form validation in Angular?",
        "type": "checkbox",
        "options": [
          {
            "id": 1,
            "label": "Using built-in HTML form validation attributes"
          },
          {
            "id": 2,
            "label": "By creating custom validators using Angular services"
          },
          {
            "id": 3,
            "label": "Form validation is not possible in Angular"
          },
          {
            "id": 4,
            "label": "None of the above."
          }
        ],
        "answer": [
          1,
          2
        ]
      }
    ]
  }
}