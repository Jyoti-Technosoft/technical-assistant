{
  "userData": [
    {
      "email": "heer@gmail.com",
      "password": "Heer@123",
      "fullName": "Vidhi Shah",
      "gender": "female",
      "dob": "2023-08-08T18:30:00.000Z",
      "mobile": "4875120620",
      "terms": true,
      "id": 1
    },
    {
      "email": "mitali.jtdev@gmail.com",
      "password": "Mitali@12345",
      "fullName": "Mitali Rana",
      "gender": "female",
      "dob": "2023-08-27T18:30:00.000Z",
      "mobile": "1234567896",
      "terms": true,
      "id": 2
    },
    {
      "email": "yashesh@gmail.com",
      "password": "Yashesh123",
      "fullName": "Yashesh shah",
      "gender": "male",
      "dob": "2020-06-09T18:30:00.000Z",
      "mobile": "5879874564",
      "terms": true,
      "id": 3
    }
  ],
  "countData": [
    {
      "totalQuizPlayed": "5",
      "highestPoints": "24",
      "lowestPoints": "10",
      "highestQuizPlayed": "angular"
    }
  ],
  "quizDetails": [
    {
      "id": "angular",
      "rules": "<ul> <li>There are a total of <b>numberOfQuestions</b> questions in the test.</li> <li>There is negative marking, where an incorrect answer deducts <b>negativePoints Point.</b></li> <li>A correct answer earns you <b>positivePoints Point.</b></li> <li>Each question must be answered within a <b>timer seconds</b> time limit.</li> <li>After <b>timer seconds</b>, the question changes automatically.</li> <li>Participants have the option to proceed to the next question before the time limit ends by clicking on a <b>Next button<b>.</li> </ul>",
      "timer": 30,
      "positivePoints": 1,
      "negativePoints": 0.25,
      "numberOfQuestions": 4,
      "testLevel": [
        "1st",
        "2nd"
      ],
      "title": "Angular",
      "image": "assets\\img\\angular_logo.svg",
      "description": "Angular is a platform and framework for building single-page client applications using HTML and TypeScript. Angular is written in TypeScript. It implements core and optional functionality as a set of TypeScript libraries that you import into your applications."
    },
    {
      "id": "htmlCss",
      "rules": "<ul> <li>There are a total of <b>numberOfQuestions</b> questions in the test.</li> <li>There is negative marking, where an incorrect answer deducts <b>negativePoints Point.</b></li> <li>A correct answer earns you <b>positivePoints Point.</b></li> <li>Each question must be answered within a <b>timer seconds</b> time limit.</li> <li>After <b>timer seconds</b>, the question changes automatically.</li> <li>Participants have the option to proceed to the next question before the time limit ends by clicking on a <b>Next button<b>.</li> </ul>",
      "timer": 15,
      "positivePoints": 2,
      "negativePoints": 1,
      "numberOfQuestions": 4,
      "testLevel": [
        "1st",
        "2nd"
      ],
      "title": "HTML-CSS",
      "image": "assets\\img\\htmlcss_logo.svg",
      "description": "HTML (the Hypertext Markup Language) and CSS (Cascading Style Sheets) are two of the core technologies for building Web pages."
    },
    {
      "id": "javascript",
      "rules": "<ul> <li>There are a total of <b>numberOfQuestions</b> questions in the test.</li> <li>There is negative marking, where an incorrect answer deducts <b>negativePoints Point.</b></li> <li>A correct answer earns you <b>positivePoints Point.</b></li> <li>Each question must be answered within a <b>timer seconds</b> time limit.</li> <li>After <b>timer seconds</b>, the question changes automatically.</li> <li>Participants have the option to proceed to the next question before the time limit ends by clicking on a <b>Next button<b>.</li> </ul>",
      "timer": 50,
      "positivePoints": 1,
      "negativePoints": 0.25,
      "numberOfQuestions": 3,
      "testLevel": [
        "1st",
        "2nd"
      ],
      "title": "JavaScript",
      "image": "assets\\img\\javascript_logo.png",
      "description": "JavaScript is a light-weight object-oriented programming language that is used by several websites for scripting the webpages. It is an interpreted, full-fledged programming language. JavaScript enables dynamic interactivity on websites when it is applied to an HTML document."
    },
    {
      "id": "reactJS",
      "rules": "<ul> <li>There are a total of <b>numberOfQuestions</b> questions in the test.</li> <li>There is negative marking, where an incorrect answer deducts <b>negativePoints Point.</b></li> <li>A correct answer earns you <b>positivePoints Point.</b></li> <li>Each question must be answered within a <b>timer seconds</b> time limit.</li> <li>After <b>timer seconds</b>, the question changes automatically.</li> <li>Participants have the option to proceed to the next question before the time limit ends by clicking on a <b>Next button<b>.</li> </ul>",
      "timer": 20,
      "positivePoints": 1,
      "negativePoints": 0.25,
      "numberOfQuestions": 3,
      "testLevel": [
        "1st",
        "2nd"
      ],
      "title": "React JS",
      "image": "assets\\img\\react_logo.svg",
      "description": "React is a free and open-source front-end JavaScript library for building user interfaces based on components. It is maintained by Meta."
    }
  ],
  "questionsList": [
    {
      "id": "angular",
      "1st": [
        {
          "question": "Angular is a ____",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "Java framework"
            },
            {
              "id": 2,
              "label": "JavaScript framework"
            },
            {
              "id": 3,
              "label": "HTML framework"
            },
            {
              "id": 4,
              "label": "TypeScript framework"
            }
          ],
          "answer": [
            2
          ]
        },
        {
          "question": "Which of the following is not a hook application life cycle?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "ngOnChanges"
            },
            {
              "id": 2,
              "label": "ngViewStart"
            },
            {
              "id": 3,
              "label": "ngOnInit"
            },
            {
              "id": 4,
              "label": "None of the above"
            }
          ],
          "answer": [
            2
          ]
        },
        {
          "question": "Which angular decorator allows us to define the pipe name that is globally available for use in any template in the across application?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "pipeName"
            },
            {
              "id": 2,
              "label": "pipeDeco"
            },
            {
              "id": 3,
              "label": "Pipe"
            },
            {
              "id": 4,
              "label": "None of the above"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "Which of the following will map the name of an input parameter `userData` to a field named `users`?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "@Input('userData') users"
            },
            {
              "id": 2,
              "label": "@Input() userData: users"
            },
            {
              "id": 3,
              "label": "@Input() users: userData"
            },
            {
              "id": 4,
              "label": "@Input('users') userData"
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "What is Angular?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "A programming language"
            },
            {
              "id": 2,
              "label": "A JavaScript library"
            },
            {
              "id": 3,
              "label": "A framework for building web applications"
            },
            {
              "id": 4,
              "label": "A database management system"
            }
          ],
          "answer": [
            3
          ]
        }
      ],
      "2nd": [
        {
          "question": " What is the purpose of Angular CLI?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "To create and manage Angular projects"
            },
            {
              "id": 2,
              "label": "To write JavaScript code"
            },
            {
              "id": 3,
              "label": "To design user interfaces"
            },
            {
              "id": 4,
              "label": "To connect to databases"
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "In Angular, what is the purpose of the @NgModule decorator?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "To define a component"
            },
            {
              "id": 2,
              "label": "To define a service"
            },
            {
              "id": 3,
              "label": "To define a module"
            },
            {
              "id": 4,
              "label": "To define a directive"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "What is the purpose of the Angular Interceptor?",
          "type": "checkbox",
          "options": [
            {
              "id": 1,
              "label": "To intercept HTTP requests and responses"
            },
            {
              "id": 2,
              "label": "To intercept user input"
            },
            {
              "id": 3,
              "label": "To intercept routing events"
            },
            {
              "id": 4,
              "label": "To intercept Angular CLI commands"
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "How do you communicate between components in Angular?",
          "type": "checkbox",
          "options": [
            {
              "id": 1,
              "label": "Using @Input and @Output decorators"
            },
            {
              "id": 2,
              "label": "Using two way binding"
            },
            {
              "id": 3,
              "label": "By directly accessing component properties"
            },
            {
              "id": 4,
              "label": "Using JavaScript's window object"
            }
          ],
          "answer": [
            1,
            2
          ]
        },
        {
          "question": "What is Angular CLI's ng serve command used for?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "Creating a new Angular project"
            },
            {
              "id": 2,
              "label": "Compiling TypeScript code"
            },
            {
              "id": 3,
              "label": "Running a development server for the Angular application"
            },
            {
              "id": 4,
              "label": "Generating Angular components"
            }
          ],
          "answer": [
            3
          ]
        }
      ],
      "3rd": [
        {
          "question": "What is an Angular resolver used for?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "To resolve routing conflicts"
            },
            {
              "id": 2,
              "label": "To resolve dependencies in Angular modules"
            },
            {
              "id": 3,
              "label": "To prefetch data before a route is activated"
            },
            {
              "id": 4,
              "label": "To resolve authentication issues"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "What is an Angular directive, and how does it differ from a component?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "A directive is used for rendering HTML templates, while a component represents a page."
            },
            {
              "id": 2,
              "label": "A directive is used for extending HTML with custom behavior, while a component is a self-contained UI element."
            },
            {
              "id": 3,
              "label": "A directive is used for defining module dependencies, while a component is used for routing."
            },
            {
              "id": 4,
              "label": "A directive is used for managing API requests, while a component is used for UI design."
            }
          ],
          "answer": [
            2
          ]
        },
        {
          "question": "Explain the difference between ngOnInit and constructor in an Angular component.",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "ngOnInit is used for component initialization, while the constructor is used for dependency injection."
            },
            {
              "id": 2,
              "label": "ngOnInit is used for dependency injection, while the constructor is used for component initialization."
            },
            {
              "id": 3,
              "label": "They are interchangeable and can be used for the same purpose."
            },
            {
              "id": 4,
              "label": "ngOnInit is used for defining routes, while the constructor is used for event handling."
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "What is Angular's AOT (Ahead-of-Time) compilation, and why is it important?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "AOT compiles templates and components before runtime, improving application performance and security."
            },
            {
              "id": 2,
              "label": "AOT is a feature for routing optimization in Angular."
            },
            {
              "id": 3,
              "label": "AOT is used for asynchronous data loading in Angular applications."
            },
            {
              "id": 4,
              "label": "AOT stands for Angular's Offline Testing, which verifies application functionality without an internet connection."
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "How can you implement form validation in Angular?",
          "type": "checkbox",
          "options": [
            {
              "id": 1,
              "label": "Using built-in HTML form validation attributes"
            },
            {
              "id": 2,
              "label": "By creating custom validators using Angular services"
            },
            {
              "id": 3,
              "label": "Form validation is not possible in Angular"
            },
            {
              "id": 4,
              "label": "None of the above."
            }
          ],
          "answer": [
            1,
            2
          ]
        }
      ]
    },
    {
      "id": "htmlCss",
      "1st": [
        {
          "question": "What does HTML stand for?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "High-Level Text Management Language"
            },
            {
              "id": 2,
              "label": "Hyperlink and Text Manipulation Language"
            },
            {
              "id": 3,
              "label": "Hyper Text Markup Language"
            },
            {
              "id": 4,
              "label": "Hyper Transfer Markup Language"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "What is the purpose of the CSS flexbox layout?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "To create two-dimensional grids"
            },
            {
              "id": 2,
              "label": "To create responsive web designs"
            },
            {
              "id": 3,
              "label": "To apply animations to elements"
            },
            {
              "id": 4,
              "label": "To align elements in a single dimension (either horizontally or vertically)"
            }
          ],
          "answer": [
            4
          ]
        },
        {
          "question": "What is the correct CSS syntax for setting the text color of an element with the class `highlight` to red?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": ".highlight { text-color: red; }"
            },
            {
              "id": 2,
              "label": ".highlight { color: red; }"
            },
            {
              "id": 3,
              "label": "#highlight { text-color: red; }"
            },
            {
              "id": 4,
              "label": "#highlight { color: red; }"
            }
          ],
          "answer": [
            2
          ]
        },
        {
          "question": "In CSS, which property is used to control the size of an element's margin area?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "padding"
            },
            {
              "id": 2,
              "label": "border"
            },
            {
              "id": 3,
              "label": "margin"
            },
            {
              "id": 4,
              "label": "spacing"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "What is the correct HTML tag for inserting a line break?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "<br>"
            },
            {
              "id": 2,
              "label": "<lb>"
            },
            {
              "id": 3,
              "label": "<break>"
            },
            {
              "id": 4,
              "label": "<newline>"
            }
          ],
          "answer": [
            1
          ]
        }
      ],
      "2nd": [
        {
          "question": "How to add a background color in HTML?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "<marquee bg color: `red`>"
            },
            {
              "id": 2,
              "label": "<marquee bg-color = `red`>"
            },
            {
              "id": 3,
              "label": "<marquee bgcolor = `red`>"
            },
            {
              "id": 4,
              "label": "<marquee color = `red`>"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "What are the types of unordered or bulleted list in HTML?",
          "type": "checkbox",
          "options": [
            {
              "id": 1,
              "label": "disc"
            },
            {
              "id": 2,
              "label": "square"
            },
            {
              "id": 3,
              "label": "triangle"
            },
            {
              "id": 4,
              "label": "circle"
            }
          ],
          "answer": [
            1,
            2,
            4
          ]
        },
        {
          "question": "Which of the following is the correct way to change the font face in HTML?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "<font name = `Calibri`> ……… </font>"
            },
            {
              "id": 2,
              "label": "<font face = `Calibri`> ……… </font>"
            },
            {
              "id": 3,
              "label": "<font = `Calibri`> ……… </font>"
            },
            {
              "id": 4,
              "label": "None of the above"
            }
          ],
          "answer": [
            2
          ]
        },
        {
          "question": "Which of the following selector in CSS is used to select the elements that do not match the selectors?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": ":! selector"
            },
            {
              "id": 2,
              "label": ":empty selector"
            },
            {
              "id": 3,
              "label": ":not selector"
            },
            {
              "id": 4,
              "label": "None of the above"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "The CSS property which is used to define the set the difference between two lines of your content is -",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "min-height property"
            },
            {
              "id": 2,
              "label": "max-height property"
            },
            {
              "id": 3,
              "label": "line-height property"
            },
            {
              "id": 4,
              "label": "None of the above"
            }
          ],
          "answer": [
            3
          ]
        }
      ],
      "3rd": [
        {
          "question": "The CSS property used to set the distance between the borders of the adjacent cells in the table is -",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "border-collapse"
            },
            {
              "id": 2,
              "label": "border-radius"
            },
            {
              "id": 3,
              "label": "border-spacing"
            },
            {
              "id": 4,
              "label": "None of the above"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "Which of the following is not a value of the font-variant property in CSS?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "normal"
            },
            {
              "id": 2,
              "label": "small-caps"
            },
            {
              "id": 3,
              "label": "large-caps"
            },
            {
              "id": 4,
              "label": "inherit"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "Which of the following is correct about custom attributes in HTML5?",
          "type": "checkbox",
          "options": [
            {
              "id": 1,
              "label": "A custom data attribute starts with data- and would be named based on your requirement."
            },
            {
              "id": 2,
              "label": "You would be able to get the values of these attributes using JavaScript APIs or CSS in similar way as you get for standard attributes."
            },
            {
              "id": 3,
              "label": "The custom attributes are also known as data attributes."
            },
            {
              "id": 4,
              "label": "None of the above."
            }
          ],
          "answer": [
            1,
            2,
            3
          ]
        },
        {
          "question": "Which of the following input control represents a date and time (year, month, day, hour, minute, second, fractions of a second) encoded according to ISO 8601 with no time zone information in Web Form 2.0?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "datetime"
            },
            {
              "id": 2,
              "label": "datetime-local"
            },
            {
              "id": 3,
              "label": "date"
            },
            {
              "id": 4,
              "label": "month"
            }
          ],
          "answer": [
            2
          ]
        },
        {
          "question": "Which of the following tag can be used to mark up a conversation in HTML5?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "footer"
            },
            {
              "id": 2,
              "label": "nav"
            },
            {
              "id": 3,
              "label": "dialog"
            },
            {
              "id": 4,
              "label": "figure"
            }
          ],
          "answer": [
            3
          ]
        }
      ]
    },
    {
      "id": "javascript",
      "1st": [
        {
          "question": "What does JavaScript primarily add to web pages?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "Styling"
            },
            {
              "id": 2,
              "label": "Behavior"
            },
            {
              "id": 3,
              "label": "Content"
            },
            {
              "id": 4,
              "label": "Structure"
            }
          ],
          "answer": [
            2
          ]
        },
        {
          "question": "Which keyword is used to declare a variable in JavaScript?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "var"
            },
            {
              "id": 2,
              "label": "int"
            },
            {
              "id": 3,
              "label": "string"
            },
            {
              "id": 4,
              "label": "let"
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "How can you comment a single line in JavaScript?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "/* Comment */"
            },
            {
              "id": 2,
              "label": "// Comment"
            },
            {
              "id": 3,
              "label": "# Comment"
            },
            {
              "id": 4,
              "label": "<!-- Comment -->"
            }
          ],
          "answer": [
            2
          ]
        },
        {
          "question": "Which data type is not primitive in JavaScript?",
          "type": "checkbox",
          "options": [
            {
              "id": 1,
              "label": "String"
            },
            {
              "id": 2,
              "label": "Array"
            },
            {
              "id": 3,
              "label": "Object"
            },
            {
              "id": 4,
              "label": "Undefined"
            }
          ],
          "answer": [
            1,
            2,
            3
          ]
        },
        {
          "question": "What does NaN stand for in JavaScript?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "Not a Null"
            },
            {
              "id": 2,
              "label": "Not a Number"
            },
            {
              "id": 3,
              "label": "No Available Number"
            },
            {
              "id": 4,
              "label": "Not an Nth"
            }
          ],
          "answer": [
            2
          ]
        }
      ],
      "2nd": [
        {
          "question": "What is the result of 5 + `5` in JavaScript?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "55"
            },
            {
              "id": 2,
              "label": "10"
            },
            {
              "id": 3,
              "label": "`55`"
            },
            {
              "id": 4,
              "label": "Error"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "Which JavaScript function is used to convert a string to an integer?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "parseInt()"
            },
            {
              "id": 2,
              "label": "toInt()"
            },
            {
              "id": 3,
              "label": "strToNum()"
            },
            {
              "id": 4,
              "label": "intConvert()"
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "What does the `===` operator do in JavaScript?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "Compares two values for equality without type conversion"
            },
            {
              "id": 2,
              "label": "Compares two values for equality with type conversion"
            },
            {
              "id": 3,
              "label": "Assigns a value to a variable"
            },
            {
              "id": 4,
              "label": "Checks if a value is greater than another"
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "What is the purpose of the `for` loop in JavaScript?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "To declare variables"
            },
            {
              "id": 2,
              "label": "To create functions"
            },
            {
              "id": 3,
              "label": "To execute a block of code repeatedly"
            },
            {
              "id": 4,
              "label": "To conditionally execute code"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "What is the purpose of the `querySelector` method in JavaScript?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "To query the server for data"
            },
            {
              "id": 2,
              "label": "To select elements in the DOM using CSS selectors"
            },
            {
              "id": 3,
              "label": "To create new DOM elements"
            },
            {
              "id": 4,
              "label": "To define global variables"
            }
          ],
          "answer": [
            2
          ]
        }
      ],
      "3rd": [
        {
          "question": "What is the purpose of a JavaScript closure?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "To create private variables and functions"
            },
            {
              "id": 2,
              "label": "To close a web page"
            },
            {
              "id": 3,
              "label": "To prevent memory leaks"
            },
            {
              "id": 4,
              "label": "To hide code from the browser"
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "What is the difference between `null` and `undefined` in JavaScript?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "They are the same."
            },
            {
              "id": 2,
              "label": "`null` represents an intentional absence of value, while `undefined` indicates a variable has been declared but not assigned a value."
            },
            {
              "id": 3,
              "label": "`null` indicates a variable has been declared but not assigned a value, while `undefined` represents an intentional absence of value."
            },
            {
              "id": 4,
              "label": "`null` represents a number with a value of zero, while `undefined` represents a missing variable."
            }
          ],
          "answer": [
            2
          ]
        },
        {
          "question": "What is the event delegation in JavaScript?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "A way to delegate events to specific DOM elements"
            },
            {
              "id": 2,
              "label": "A method for handling asynchronous events"
            },
            {
              "id": 3,
              "label": "A pattern where a parent element handles events for its child elements"
            },
            {
              "id": 4,
              "label": "A technique for creating custom events"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "What is a closure in JavaScript?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "A built-in JavaScript function"
            },
            {
              "id": 2,
              "label": "A function that has access to variables from its outer scope"
            },
            {
              "id": 3,
              "label": "A function that cannot be invoked"
            },
            {
              "id": 4,
              "label": "A function that runs only once"
            }
          ],
          "answer": [
            2
          ]
        },
        {
          "question": "Which of the following is NOT a valid way to declare a function in JavaScript?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "function myFunction() {}"
            },
            {
              "id": 2,
              "label": "const myFunction = function() {};"
            },
            {
              "id": 3,
              "label": "const myFunction => () {};"
            },
            {
              "id": 4,
              "label": "let myFunction = () => {};"
            }
          ],
          "answer": [
            3
          ]
        }
      ]
    },
    {
      "id": "reactJS",
      "1st": [
        {
          "question": "What is React.js?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "A server-side framework"
            },
            {
              "id": 2,
              "label": "A JavaScript library for building user interfaces"
            },
            {
              "id": 3,
              "label": "A database management system"
            },
            {
              "id": 4,
              "label": "An operating system"
            }
          ],
          "answer": [
            2
          ]
        },
        {
          "question": "What is JSX?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "JavaScript XML"
            },
            {
              "id": 2,
              "label": "JavaScript eXtensible Syntax"
            },
            {
              "id": 3,
              "label": "JavaScript eXtension Language"
            },
            {
              "id": 4,
              "label": "JavaScript XML Syntax"
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "In React, what is the purpose of the `render` method?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "To update the component's state"
            },
            {
              "id": 2,
              "label": "To handle user input"
            },
            {
              "id": 3,
              "label": "To perform asynchronous operations"
            },
            {
              "id": 4,
              "label": "To return the initial HTML structure"
            }
          ],
          "answer": [
            4
          ]
        },
        {
          "question": "Which function is used to change the state of a component?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "setState()"
            },
            {
              "id": 2,
              "label": "changeState()"
            },
            {
              "id": 3,
              "label": "updateState()"
            },
            {
              "id": 4,
              "label": "modifyState()"
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "What's the key benefit of using React's virtual DOM?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "It improves server performance"
            },
            {
              "id": 2,
              "label": "It allows direct manipulation of the DOM"
            },
            {
              "id": 3,
              "label": "It reduces the need for reflows and repaints"
            },
            {
              "id": 4,
              "label": "It eliminates the need for JavaScript"
            }
          ],
          "answer": [
            3
          ]
        }
      ],
      "2nd": [
        {
          "question": "In React, what is a prop?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "A method for updating state"
            },
            {
              "id": 2,
              "label": "A reserved keyword"
            },
            {
              "id": 3,
              "label": "A way to pass data from parent to child components"
            },
            {
              "id": 4,
              "label": "A built-in JavaScript function"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "Which lifecycle method is invoked just before a component is removed from the DOM?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "componentDidMount()"
            },
            {
              "id": 2,
              "label": "componentWillUnmount()"
            },
            {
              "id": 3,
              "label": "componentDidUpdate()"
            },
            {
              "id": 4,
              "label": "componentWillUpdate()"
            }
          ],
          "answer": [
            2
          ]
        },
        {
          "question": "What is the purpose of React Router in a React application?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "To manage HTTP requests"
            },
            {
              "id": 2,
              "label": "To handle authentication"
            },
            {
              "id": 3,
              "label": "To create a single-page application with routing"
            },
            {
              "id": 4,
              "label": "To optimize rendering performance"
            }
          ],
          "answer": [
            3
          ]
        },
        {
          "question": "How can you pass a function as a prop in React?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "You can't pass functions as props"
            },
            {
              "id": 2,
              "label": "Use the this.functionName syntax"
            },
            {
              "id": 3,
              "label": "Use an arrow function in the props"
            },
            {
              "id": 4,
              "label": "Wrap the function in curly braces"
            }
          ],
          "answer": [
            4
          ]
        },
        {
          "question": "Which of the following is correct about prop in react?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "Can be changed inside another component"
            },
            {
              "id": 2,
              "label": "Can be changed inside the component"
            },
            {
              "id": 3,
              "label": "Cannot be changed in the component"
            },
            {
              "id": 4,
              "label": " All of the mentioned"
            }
          ],
          "answer": [
            3
          ]
        }
      ],
      "3rd": [
        {
          "question": "Choose the correct data flow sequence of flux concept.",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "Action -> Dispatcher -> Store -> View"
            },
            {
              "id": 2,
              "label": "Action -> Dispatcher -> View -> Store"
            },
            {
              "id": 3,
              "label": "Action -> Store -> View -> Dispatcher"
            },
            {
              "id": 4,
              "label": "Dispatcher -> Action -> Store -> View"
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "Among the corner which is a must-have for every ReactJS component?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "renderComponent"
            },
            {
              "id": 2,
              "label": "SetinitialComponent"
            },
            {
              "id": 3,
              "label": "Render"
            },
            {
              "id": 4,
              "label": "All of the above"
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "What is the functionality of a “webpack” command?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "Runs react local development server"
            },
            {
              "id": 2,
              "label": "transfer files all the JavaScript down into one file"
            },
            {
              "id": 3,
              "label": "a module blunder"
            },
            {
              "id": 4,
              "label": "none of the above"
            }
          ],
          "answer": [
            1
          ]
        },
        {
          "question": "Which of the following is used to access a function fetch() from h1 element in JSX?",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "<h1> ${fetch()} </h1>"
            },
            {
              "id": 2,
              "label": "<h1> {fetch} </h1>"
            },
            {
              "id": 3,
              "label": "<h1> ${fetch} </h1>"
            },
            {
              "id": 4,
              "label": "<h1> {fetch()} </h1>"
            }
          ],
          "answer": [
            4
          ]
        },
        {
          "question": "Explain the concept of controlled vs. uncontrolled components in React.",
          "type": "radio",
          "options": [
            {
              "id": 1,
              "label": "Controlled components are components that are managed by the DOM, while uncontrolled components are managed by React."
            },
            {
              "id": 2,
              "label": "Controlled components are components that don't have a state, while uncontrolled components have a state."
            },
            {
              "id": 3,
              "label": "Controlled components are components that use props for data, while uncontrolled components use state."
            },
            {
              "id": 4,
              "label": "Controlled components are components whose values are controlled by React state, while uncontrolled components rely on the DOM for their state."
            }
          ],
          "answer": [
            4
          ]
        }
      ]
    }
  ],
  "result": [
    {
      "type": "javascript",
      "totalQuestions": 5,
      "points": -1,
      "skipAnswer": 1,
      "correctAnswer": 0,
      "inCorrectAnswer": 4,
      "quizTypeImage": "assets\\img\\javascript.svg",
      "date": "2023-08-19",
      "userId": 1,
      "id": 5
    },
    {
      "type": "javascript",
      "totalQuestions": 5,
      "points": 0.25,
      "skipAnswer": 1,
      "correctAnswer": 1,
      "inCorrectAnswer": 3,
      "quizTypeImage": "assets\\img\\javascript.svg",
      "date": "2023-08-19",
      "userId": 1,
      "id": 6
    },
    {
      "type": "javascript",
      "totalQuestions": 5,
      "points": 2.5,
      "skipAnswer": 0,
      "correctAnswer": 3,
      "inCorrectAnswer": 2,
      "quizTypeImage": "assets\\img\\javascript.svg",
      "date": "2023-08-19",
      "userId": 1,
      "id": 7
    },
    {
      "type": "htmlCss",
      "totalQuestions": 5,
      "points": 2,
      "skipAnswer": 3,
      "correctAnswer": 2,
      "inCorrectAnswer": 0,
      "quizTypeImage": "assets\\img\\html-css.svg",
      "date": "2023-08-19",
      "userId": 1,
      "id": 8
    },
    {
      "type": "htmlCss",
      "totalQuestions": 4,
      "points": -3,
      "skipAnswer": 1,
      "correctAnswer": 0,
      "inCorrectAnswer": 3,
      "quizTypeImage": "assets\\img\\html-css.svg",
      "date": "2023-08-19",
      "userId": 1,
      "id": 9
    },
    {
      "type": "htmlCss",
      "totalQuestions": 4,
      "points": 8,
      "skipAnswer": 0,
      "correctAnswer": 4,
      "inCorrectAnswer": 0,
      "quizTypeImage": "assets\\img\\html-css.svg",
      "date": "2023-08-19",
      "userId": 1,
      "id": 10
    },
    {
      "type": "javascript",
      "totalQuestions": 5,
      "points": 3,
      "skipAnswer": 2,
      "correctAnswer": 3,
      "inCorrectAnswer": 0,
      "quizTypeImage": "assets\\img\\javascript.svg",
      "date": "2023-08-28",
      "userId": 2,
      "id": 11
    },
    {
      "type": "angular",
      "totalQuestions": 5,
      "points": 2.5,
      "skipAnswer": 0,
      "correctAnswer": 3,
      "inCorrectAnswer": 2,
      "quizTypeImage": "assets\\img\\angular_logo.svg",
      "date": "2023-09-04",
      "userId": 3,
      "id": 12
    },
    {
      "type": "angular",
      "totalQuestions": 5,
      "points": 1.25,
      "skipAnswer": 0,
      "correctAnswer": 0,
      "inCorrectAnswer": 5,
      "quizTypeImage": "assets\\img\\angular_logo.svg",
      "date": "2023-09-05",
      "userId": 2,
      "id": 13
    },
    {
      "type": "angular",
      "totalQuestions": 5,
      "points": 1.25,
      "skipAnswer": 0,
      "correctAnswer": 0,
      "inCorrectAnswer": 5,
      "quizTypeImage": "assets\\img\\angular_logo.svg",
      "date": "2023-09-05",
      "userId": 2,
      "id": 14
    },
    {
      "type": "angular",
      "totalQuestions": 5,
      "points": 0,
      "skipAnswer": 0,
      "correctAnswer": 1,
      "inCorrectAnswer": 4,
      "quizTypeImage": "assets\\img\\angular_logo.svg",
      "date": "2023-09-05",
      "userId": 2,
      "id": 15
    },
    {
      "type": "angular",
      "totalQuestions": 5,
      "points": 0.25,
      "skipAnswer": 1,
      "correctAnswer": 1,
      "inCorrectAnswer": 3,
      "quizTypeImage": "assets\\img\\angular_logo.svg",
      "date": "2023-09-05",
      "userId": 2,
      "id": 16
    },
    {
      "type": "angular",
      "totalQuestions": 5,
      "points": 0.25,
      "skipAnswer": 1,
      "correctAnswer": 1,
      "inCorrectAnswer": 3,
      "quizTypeImage": "assets\\img\\angular_logo.svg",
      "date": "2023-09-05",
      "userId": 2,
      "id": 17
    },
    {
      "type": "angular",
      "totalQuestions": 5,
      "points": 3.75,
      "skipAnswer": 0,
      "correctAnswer": 4,
      "inCorrectAnswer": 1,
      "quizTypeImage": "assets\\img\\angular_logo.svg",
      "date": "2023-09-07",
      "userId": 2,
      "id": 18
    },
    {
      "type": "angular",
      "totalQuestions": 2,
      "points": 0,
      "skipAnswer": 2,
      "correctAnswer": 0,
      "inCorrectAnswer": 0,
      "quizTypeImage": "assets\\img\\angular_logo.svg",
      "date": "2023-09-07",
      "userId": 2,
      "id": 19
    },
    {
      "type": "angular",
      "totalQuestions": 4,
      "points": -1,
      "skipAnswer": 0,
      "correctAnswer": 0,
      "inCorrectAnswer": 4,
      "quizTypeImage": "assets\\img\\angular_logo.svg",
      "date": "2023-09-08",
      "userId": 2,
      "id": 20
    },
    {
      "type": "angular",
      "totalQuestions": 4,
      "points": -1,
      "skipAnswer": 0,
      "correctAnswer": 0,
      "inCorrectAnswer": 4,
      "quizTypeImage": "assets\\img\\angular_logo.svg",
      "date": "2023-09-11",
      "userId": 2,
      "id": 21
    },
    {
      "type": "htmlCss",
      "totalQuestions": 4,
      "points": -0.5,
      "skipAnswer": 0,
      "correctAnswer": 0,
      "inCorrectAnswer": 4,
      "quizTypeImage": "assets\\img\\htmlcss_logo.svg",
      "date": "2023-09-11",
      "userId": 2,
      "id": 22
    }
  ]
}